{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo-list\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task({\n  TaskName,\n  Status,\n  Key,\n  setTasks,\n  setAddTaskFlag,\n  setStatusValue,\n  setTitleValue\n}) {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, 300);\n    return () => clearTimeout(timer);\n  });\n  function handleDelete(Task) {\n    setTasks(CurrentTasks => {\n      return CurrentTasks.filter(TaskObj => TaskObj.task !== Task.TaskName);\n    });\n  }\n  function handleEdit(Task, ItemStatus) {\n    console.log(ItemStatus, Task);\n    setStatusValue(ItemStatus.Status);\n    setTitleValue(Task.TaskName);\n    setAddTaskFlag(prev => !prev);\n  }\n  function handleCheck(Task) {\n    setTasks(CurrentTasks => {\n      const UpdatedTasks = CurrentTasks.map(TaskObj => {\n        if (TaskObj.task === Task.TaskName) {\n          return {\n            ...TaskObj,\n            status: TaskObj.status === \"Complete\" ? \"Incomplete\" : \"Complete\"\n          };\n        }\n        return TaskObj;\n      });\n      return UpdatedTasks;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TaskBox ${isVisible ? \"appear\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        type: \"checkbox\",\n        id: `check${Key + 1}`,\n        className: \"checkbox-flip\",\n        checked: Status === \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"CheckboxLabel\",\n        htmlFor: `check${Key + 1}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleCheck({\n            TaskName\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Status === \"Complete\" ? \"CompleteText\" : \"\",\n          children: TaskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EditButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EditBtnDiv\",\n        onClick: () => handleDelete({\n          TaskName\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/trashcan.png\",\n          width: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EditBtnDiv\",\n        onClick: () => handleEdit({\n          TaskName\n        }, {\n          Status\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/pencil.png\",\n          width: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Task","TaskName","Status","Key","setTasks","setAddTaskFlag","setStatusValue","setTitleValue","_s","isVisible","setIsVisible","timer","setTimeout","clearTimeout","handleDelete","CurrentTasks","filter","TaskObj","task","handleEdit","ItemStatus","console","log","prev","handleCheck","UpdatedTasks","map","status","className","children","readOnly","type","id","checked","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","src","width","_c","$RefreshReg$"],"sources":["D:/Projects/todo-list/src/components/Task.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function Task({\r\n  TaskName,\r\n  Status,\r\n  Key,\r\n  setTasks,\r\n  setAddTaskFlag,\r\n  setStatusValue,\r\n  setTitleValue,\r\n}) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsVisible(true);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  function handleDelete(Task) {\r\n    setTasks((CurrentTasks) => {\r\n      return CurrentTasks.filter((TaskObj) => TaskObj.task !== Task.TaskName);\r\n    });\r\n  }\r\n\r\n  function handleEdit(Task, ItemStatus) {\r\n    console.log(ItemStatus, Task);\r\n    setStatusValue(ItemStatus.Status);\r\n    setTitleValue(Task.TaskName);\r\n    setAddTaskFlag((prev) => !prev);\r\n  }\r\n\r\n  function handleCheck(Task) {\r\n    setTasks((CurrentTasks) => {\r\n      const UpdatedTasks = CurrentTasks.map((TaskObj) => {\r\n        if (TaskObj.task === Task.TaskName) {\r\n          return {\r\n            ...TaskObj,\r\n            status: TaskObj.status === \"Complete\" ? \"Incomplete\" : \"Complete\",\r\n          };\r\n        }\r\n        return TaskObj;\r\n      });\r\n      return UpdatedTasks;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={`TaskBox ${isVisible ? \"appear\" : \"\"}`}>\r\n      <div className=\"checkbox\">\r\n        <input\r\n          readOnly\r\n          type=\"checkbox\"\r\n          id={`check${Key + 1}`}\r\n          className=\"checkbox-flip\"\r\n          checked={Status === \"Complete\"}\r\n        />\r\n        <label className=\"CheckboxLabel\" htmlFor={`check${Key + 1}`}>\r\n          <span onClick={() => handleCheck({ TaskName })}></span>\r\n          <p className={Status === \"Complete\" ? \"CompleteText\" : \"\"}>\r\n            {TaskName}\r\n          </p>\r\n        </label>\r\n      </div>\r\n      <div className=\"EditButtons\">\r\n        <div className=\"EditBtnDiv\" onClick={() => handleDelete({ TaskName })}>\r\n          <img src=\"images/trashcan.png\" width={20} />\r\n        </div>\r\n        <div\r\n          className=\"EditBtnDiv\"\r\n          onClick={() => handleEdit({ TaskName }, { Status })}\r\n        >\r\n          <img src=\"images/pencil.png\" width={20} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}